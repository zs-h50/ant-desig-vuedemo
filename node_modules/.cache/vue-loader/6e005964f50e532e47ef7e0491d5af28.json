{"remainingRequest":"E:\\Vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Vue\\src\\components\\student\\ScoreList.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"E:\\Vue\\src\\components\\student\\ScoreList.vue","mtime":1627356424944},{"path":"E:\\Vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1627262221406},{"path":"E:\\Vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1627262226796},{"path":"E:\\Vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1627262223903},{"path":"E:\\Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1627262220345},{"path":"E:\\Vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1627262226795}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5lZGl0YWJsZS1jZWxsIHsKICBwb3NpdGlvbjogcmVsYXRpdmU7Cn0KCi5lZGl0YWJsZS1jZWxsLWlucHV0LXdyYXBwZXIsCi5lZGl0YWJsZS1jZWxsLXRleHQtd3JhcHBlciB7CiAgcGFkZGluZy1yaWdodDogMjRweDsKfQoKLmVkaXRhYmxlLWNlbGwtdGV4dC13cmFwcGVyIHsKICBwYWRkaW5nOiA1cHggMjRweCA1cHggNXB4Owp9CgouZWRpdGFibGUtY2VsbC1pY29uLAouZWRpdGFibGUtY2VsbC1pY29uLWNoZWNrIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgcmlnaHQ6IDA7CiAgd2lkdGg6IDIwcHg7CiAgY3Vyc29yOiBwb2ludGVyOwp9CgouZWRpdGFibGUtY2VsbC1pY29uIHsKICBsaW5lLWhlaWdodDogMThweDsKICBkaXNwbGF5OiBub25lOwp9CgouZWRpdGFibGUtY2VsbC1pY29uLWNoZWNrIHsKICBsaW5lLWhlaWdodDogMjhweDsKfQoKLmVkaXRhYmxlLWNlbGw6aG92ZXIgLmVkaXRhYmxlLWNlbGwtaWNvbiB7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwp9CgouZWRpdGFibGUtY2VsbC1pY29uOmhvdmVyLAouZWRpdGFibGUtY2VsbC1pY29uLWNoZWNrOmhvdmVyIHsKICBjb2xvcjogIzEwOGVlOTsKfQoKLmVkaXRhYmxlLWFkZC1idG4gewogIG1hcmdpbi1ib3R0b206IDhweDsKfQo="},{"version":3,"sources":["ScoreList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqIA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"ScoreList.vue","sourceRoot":"src/components/student","sourcesContent":["<template>\n  <div>\n    <a-button class=\"editable-add-btn\" @click=\"handleAdd\">\n      增加\n    </a-button>\n    <a-table bordered :data-source=\"dataSource\" :columns=\"columns\">\n      <template slot=\"name\" slot-scope=\"text, record\">\n        <editable-cell :text=\"text\" @change=\"onCellChange(record.key, 'name', $event)\" />\n      </template>\n      <template slot=\"operation\" slot-scope=\"text, record\">\n        <a-popconfirm\n          v-if=\"dataSource.length\"\n          title=\"是否要删除?\"\n          @confirm=\"() => onDelete(record.key)\"\n        >\n          <a href=\"javascript:;\">Delete</a>\n        </a-popconfirm>\n      </template>\n    </a-table>\n  </div>\n</template>\n<script>\nconst EditableCell = {\n  template: `\n      <div class=\"editable-cell\">\n        <div v-if=\"editable\" class=\"editable-cell-input-wrapper\">\n          <a-input :value=\"value\" @change=\"handleChange\" @pressEnter=\"check\" /><a-icon\n            type=\"check\"\n            class=\"editable-cell-icon-check\"\n            @click=\"check\"\n          />\n        </div>\n        <div v-else class=\"editable-cell-text-wrapper\">\n          {{ value || ' ' }}\n          <a-icon type=\"edit\" class=\"editable-cell-icon\" @click=\"edit\" />\n        </div>\n      </div>\n    `,\n  props: {\n    text: String,\n  },\n  data() {\n    return {\n      value: this.text,\n      editable: false,\n    };\n  },\n  methods: {\n    handleChange(e) {\n      const value = e.target.value;\n      this.value = value;\n    },\n    check() {\n      this.editable = false;\n      this.$emit('change', this.value);\n    },\n    edit() {\n      this.editable = true;\n    },\n  },\n};\nexport default {\n  components: {\n    EditableCell,\n  },\n  data() {\n    return {\n      dataSource: [\n        {\n          key: '0',\n          name: 'Edward King 0',\n          age: '32',\n          address: 'London, Park Lane no. 0',\n        },\n        {\n          key: '1',\n          name: 'Edward King 1',\n          age: '32',\n          address: 'London, Park Lane no. 1',\n        },\n      ],\n      count: 2,\n      columns: [\n        {\n          title: 'name',\n          dataIndex: 'name',\n          width: '30%',\n          scopedSlots: { customRender: 'name' },\n        },\n        {\n          title: 'age',\n          dataIndex: 'age',\n        },\n        {\n          title: 'address',\n          dataIndex: 'address',\n        },\n        {\n          title: 'operation',\n          dataIndex: 'operation',\n          scopedSlots: { customRender: 'operation' },\n        },\n      ],\n    };\n  },\n  methods: {\n    onCellChange(key, dataIndex, value) {\n      const dataSource = [...this.dataSource];\n      const target = dataSource.find(item => item.key === key);\n      if (target) {\n        target[dataIndex] = value;\n        this.dataSource = dataSource;\n      }\n    },\n    onDelete(key) {\n      const dataSource = [...this.dataSource];\n      this.dataSource = dataSource.filter(item => item.key !== key);\n    },\n    handleAdd() {\n      const { count, dataSource } = this;\n      const newData = {\n        key: count,\n        name: `Edward King ${count}`,\n        age: 32,\n        address: `London, Park Lane no. ${count}`,\n      };\n      this.dataSource = [...dataSource, newData];\n      this.count = count + 1;\n    },\n  },\n};\n</script>\n<style>\n.editable-cell {\n  position: relative;\n}\n\n.editable-cell-input-wrapper,\n.editable-cell-text-wrapper {\n  padding-right: 24px;\n}\n\n.editable-cell-text-wrapper {\n  padding: 5px 24px 5px 5px;\n}\n\n.editable-cell-icon,\n.editable-cell-icon-check {\n  position: absolute;\n  right: 0;\n  width: 20px;\n  cursor: pointer;\n}\n\n.editable-cell-icon {\n  line-height: 18px;\n  display: none;\n}\n\n.editable-cell-icon-check {\n  line-height: 28px;\n}\n\n.editable-cell:hover .editable-cell-icon {\n  display: inline-block;\n}\n\n.editable-cell-icon:hover,\n.editable-cell-icon-check:hover {\n  color: #108ee9;\n}\n\n.editable-add-btn {\n  margin-bottom: 8px;\n}\n</style>\n"]}]}